// //// JC version: 3
#include <console.jch>
#include <json.jch>
#include '../ast/node.jch'
#include './cleanup.jch'

namespace ama {
	ama::Node*+! CleanupDummyRaws(ama::Node*+! nd_root) {
		//need cleanup inside nodeofs
		for(ama::Node*+! nd_raw : nd_root.FindAllWithin(0, ama::N_RAW, NULL)) {
			if( (nd_raw.flags & 0xffff) != 0 || !nd_raw.p ) { continue; }
			if( !nd_raw.c && !(nd_raw.p.node_class == ama::N_CALL && nd_raw == nd_raw.p.c) ) {
				nd_raw.Delete();
			} else if( nd_raw.c && !nd_raw.c.s ) {
				nd_raw.ReplaceWith(nd_raw.c);
			}
		}
		return nd_root;
	}
	private void! dfsPullComment(ama::Node*+! nd) {
		for(ama::Node*+! ndi : nd) {
			dfsPullComment(ndi);
		}
		if( nd.c && 
		(nd.node_class == ama::N_CALL || nd.node_class == ama::N_BINOP || 
		nd.node_class == ama::N_DOT || nd.node_class == ama::N_ITEM || 
		(nd.node_class == ama::N_RAW && (nd.flags & 0xffff) == 0)) ) {
			if( nd.c.comments_before.length ) {
				nd.comments_before = new char[|]!(nd.comments_before + nd.c.comments_before);
				nd.c.comments_before = '';
			}
		}
	}
	ama::Node*+! SanitizeCommentPlacement(ama::Node*+! nd_root) {
		//COULDDO: make \n a trailing comment for statements: what about the first line in a scope?
		//pull comments_before out from nd.c for "headless" nodes
		dfsPullComment(nd_root);
		return nd_root;
	}
	ama::Node*+! StripBinaryOperatorSpaces(ama::Node*+! nd_root) {
		for nd in nd_root.FindAll(N_BINOP,NULL)
			nd_a=nd.c
			if nd_a.comments_after.endsWith(' '):
				nd_a.comments_after=new char[|](nd_a.comments_after.substr(0,nd_a.comments_after.length-1))
			nd_b=nd.c.s
			if nd_b.comments_before.startsWith(' '):
				nd_b.comments_before=new char[|](nd_b.comments_before.substr(1))
		return nd_root;
	}
};
